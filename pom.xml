<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.macho</groupId>
    <artifactId>muscle-parent</artifactId>
    <version>${revision}</version>

    <packaging>pom</packaging>

    <name>muscle</name>
    <description>a game server framework</description>

    <properties>
        <rversion>0.0.1-SNAPSHOT</rversion>

        <java.version>19</java.version>
        <maven.compiler.source>19</maven.compiler.source>
        <maven.compiler.target>19</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>

        <grpc.version>1.49.0</grpc.version>
        <protoc.version>3.21.1</protoc.version>
        <jetcd.version>0.7.3</jetcd.version>
        <jctools-core.version>3.3.0</jctools-core.version>
        <reflectasm.version>1.11.9</reflectasm.version>
        <groovy.version>3.0.8</groovy.version>
        <spock-bom.version>2.0-groovy-3.0</spock-bom.version>
        <kryo5.version>5.3.0</kryo5.version>
        <gson.version>2.9.1</gson.version>
        <commons.collection4.version>4.3</commons.collection4.version>
        <jmh.version>1.23</jmh.version>
        <commons.lang3.version>3.12.0</commons.lang3.version>
        <log4j.version>2.18.0</log4j.version>
        <log4j.slf4j.version>2.13.3</log4j.slf4j.version>
        <slf4j.version>1.7.36</slf4j.version>
    </properties>

    <modules>
        <module>muscle-core</module>
        <module>muscle-demo</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- grpc -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- grpc -->

            <!-- jctools -->
            <dependency>
                <groupId>org.jctools</groupId>
                <artifactId>jctools-core</artifactId>
                <version>${jctools-core.version}</version>
            </dependency>
            <!-- jctools -->

            <!-- ReflectAsm -->
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>reflectasm</artifactId>
                <version>${reflectasm.version}</version>
            </dependency>
            <!-- ReflectAsm -->

            <!-- Spock -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-bom</artifactId>
                <version>${spock-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spock -->

            <!-- Kryo -->
            <dependency>
                <groupId>com.esotericsoftware.kryo</groupId>
                <artifactId>kryo5</artifactId>
                <version>${kryo5.version}</version>
            </dependency>
            <!-- Kryo -->

            <!-- jetcd -->
            <dependency>
                <groupId>io.etcd</groupId>
                <artifactId>jetcd-core</artifactId>
                <version>${jetcd.version}</version>
            </dependency>
            <!-- jetcd -->

            <!-- Gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- Gson -->

            <!-- commons-collections4 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collection4.version}</version>
            </dependency>
            <!-- commons-collections4 -->

            <!-- jmh -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <!-- jmh -->

            <!-- common-lang -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <!-- common-lang -->

            <!-- log4j2 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.slf4j.version}</version>
            </dependency>
            <!--            <dependency>-->
            <!--                <groupId>org.apache.logging.log4j</groupId>-->
            <!--                <artifactId>log4j-slf4j18-impl</artifactId>-->
            <!--                <version>${log4j.slf4j.version}</version>-->
            <!--            </dependency>-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <!-- log4j2 -->

        </dependencies>
    </dependencyManagement>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <compilerArg>--enable-preview</compilerArg>
                        <!--                        <compilerArg>&#45;&#45;add-modules jdk.incubator.concurrent</compilerArg>-->
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protoc.version}:exe:${os.detected.classifier}
                    </protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                    </pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <!-- 是否更新pom文件，此处还有更高级的用法 -->
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Mandatory plugins for using Spock -->
            <!--            <plugin>-->
            <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
            visit https://github.com/groovy/GMavenPlus/wiki -->
            <!--                <groupId>org.codehaus.gmavenplus</groupId>-->
            <!--                <artifactId>gmavenplus-plugin</artifactId>-->
            <!--                <version>1.12.0</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <goals>-->
            <!--                            <goal>compile</goal>-->
            <!--                            <goal>compileTests</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
            <!-- Optional plugins for using Spock -->
            <!-- Only required if names of spec classes don't match default Surefire patterns (`*Test` etc.) -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <useModulePath>false
                    </useModulePath> <!-- https://issues.apache.org/jira/browse/SUREFIRE-1809 -->
                    <useFile>false</useFile>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Spec.groovy</include>
                    </includes>
                    <statelessTestsetReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
                        <disable>false</disable>
                        <version>3.0</version>
                        <usePhrasedFileName>false</usePhrasedFileName>
                        <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
                        <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
                        <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
                    </statelessTestsetReporter>
                </configuration>
            </plugin>
            <!-- Optional plugins for using Spock -->
        </plugins>
    </build>

</project>
